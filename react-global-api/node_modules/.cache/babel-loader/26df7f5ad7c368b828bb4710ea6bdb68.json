{"ast":null,"code":"const domainPath = 'http://localhost:3001';\n\nconst GetAPI = path => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`).then(response => response.json()).then(result => {\n      resolve(result);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\n\n_c = GetAPI;\n\nconst PostAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.insertArticle)\n    }).then(result => {\n      resolve(result);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\n\n_c2 = PostAPI;\n\nconst getNewsBlog = () => GetAPI('posts?_sort=id&_order=desc');\n\nconst API = {\n  getNewsBlog\n};\nexport default API;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetAPI\");\n$RefreshReg$(_c2, \"PostAPI\");","map":{"version":3,"sources":["C:/react/react-global-api/src/services/index.js"],"names":["domainPath","GetAPI","path","promise","Promise","resolve","reject","fetch","then","response","json","result","err","PostAPI","data","method","headers","body","JSON","stringify","state","insertArticle","getNewsBlog","API"],"mappings":"AAAA,MAAMA,UAAU,GAAG,uBAAnB;;AACA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACrB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,EAAvB,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,MAAD,IAAY;AACdN,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH,KAJL,EAIQC,GAAD,IAAS;AACRN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KANL;AAOH,GARe,CAAhB;AASA,SAAOT,OAAP;AACH,CAXD;;KAAMF,M;;AAaN,MAAMY,OAAO,GAAG,CAACX,IAAD,EAAOY,IAAP,KAAgB;AAC5B,QAAMX,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,EAAvB,EAA0B;AAC3Ba,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFkB;AAM3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,aAA1B;AANqB,KAA1B,CAAL,CAQKb,IARL,CAQWG,MAAD,IAAuB;AACzBN,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH,KAVL,EAUQC,GAAD,IAAS;AACRN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KAZL;AAaH,GAde,CAAhB;AAeA,SAAOT,OAAP;AACH,CAjBD;;MAAMU,O;;AAmBN,MAAMS,WAAW,GAAG,MAAMrB,MAAM,CAAC,4BAAD,CAAhC;;AACA,MAAMsB,GAAG,GAAG;AACRD,EAAAA;AADQ,CAAZ;AAIA,eAAeC,GAAf","sourcesContent":["const domainPath = 'http://localhost:3001';\r\nconst GetAPI = (path) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        fetch(`${domainPath}/${path}`)\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n                resolve(result);\r\n            }, (err) => {\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst PostAPI = (path, data) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        fetch(`${domainPath}/${path}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }, \r\n            body: JSON.stringify(this.state.insertArticle)\r\n        })\r\n            .then((result : Response) => {\r\n                resolve(result);\r\n            }, (err) => {\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst getNewsBlog = () => GetAPI('posts?_sort=id&_order=desc');\r\nconst API = {\r\n    getNewsBlog\r\n}\r\n\r\nexport default API;"]},"metadata":{},"sourceType":"module"}